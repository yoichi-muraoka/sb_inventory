<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.inventory.mapper.PlacementMapper">

	<resultMap type="com.example.inventory.domain.Placement" id="roomMap">
		<result column="amount" property="amount" />
		<result column="name" property="room.name" />
	</resultMap>

	<resultMap type="com.example.inventory.domain.Placement" id="detailedRoomMap">
		<result column="amount" property="amount" />
		<result column="id" property="room.id" />
		<result column="name" property="room.name" />
	</resultMap>

	<select id="selectByItemId"  resultMap="roomMap" parameterType="int">
		SELECT r.name, p.amount
		FROM placements AS p
		JOIN rooms AS r
		ON p.room_id = r.id
		WHERE p.item_id = #{itemId}
		ORDER BY r.id;
	</select>

	<select id="countDistinctByItemId" resultType="long">
		SELECT COUNT(DISTINCT item_id) FROM placements;
	</select>

	<select id="countByRoomId" resultType="long"
	 parameterType="string">
		SELECT COUNT(*) FROM placements
		WHERE room_id = #{roomId}
		AND amount > 0;
	</select>

	<delete id="deleteByItemId" parameterType="int">
		DELETE FROM placements WHERE item_id = #{itemId};
	</delete>

	<insert id="insert" parameterType="com.example.inventory.domain.Placement">
		INSERT INTO placements (item_id, room_id, amount)
		VALUES (#{item.id}, #{room.id}, #{amount});
	</insert>

	<!-- INSERTをまとめて行う + 重複する場合はUPDATEにする -->
	<update id="insertOrUpdate" parameterType="java.util.List">
		INSERT INTO placements (item_id, room_id, amount)
		VALUES
		<foreach collection="list" item="placement" separator=", ">
			(#{placement.item.id}, #{placement.room.id}, #{placement.amount})
		</foreach>
		ON DUPLICATE KEY
		UPDATE amount = VALUES(amount);
	</update>

	<!-- 在庫が0個の場合、配置情報を削除（ただし倉庫には残す） -->
	<delete id="deleteZero">
		DELETE FROM placements
		WHERE amount = 0 AND NOT room_id = 'R101';
	</delete>

	<!-- selectByIdの拡張版 -->
	<select id="selectAllRoomsByItemId"  resultMap="detailedRoomMap" parameterType="int">
		SELECT r.id, r.name, IFNULL(p.amount, 0) AS amount
		FROM (
			SELECT p.room_id, p.amount
			FROM placements AS p
			JOIN rooms AS r
			ON p.room_id = r.id
			WHERE p.item_id = #{itemId}
			) AS p
		RIGHT JOIN rooms AS r
		ON p.room_id = r.id
		ORDER BY r.id;
	</select>

</mapper>